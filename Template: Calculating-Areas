#Calculating area by diferent forms with Template Pattern
from abc import ABC, abstractmethod

# Classe base abstrata para o comportamento de cálculo de área
class Shape(ABC):
    @abstractmethod
    def area(self):
        pass

# Classe para o cálculo da área de um círculo
class Circle(Shape):
    def __init__(self, radius):
        self.radius = radius

    def area(self):
        return 3.141592653589793 * (self.radius ** 2)

# Classe para o cálculo da área de um retângulo
class Rectangle(Shape):
    def __init__(self, width, height):
        self.width = width
        self.height = height

    def area(self):
        return self.width * self.height

# Classe para o cálculo da área de um triângulo
class Triangle(Shape):
    def __init__(self, base, height):
        self.base = base
        self.height = height

    def area(self):
        return 0.5 * self.base * self.height

# Função para calcular e exibir a área de uma forma
def display_area(shape):
    if isinstance(shape, Shape):
        print(f"A área é: {shape.area()}")
    else:
        print("Objeto não é uma forma válida")

# Exemplo de uso
if __name__ == "__main__":
    circle = Circle(radius=5)
    rectangle = Rectangle(width=4, height=6)
    triangle = Triangle(base=3, height=7)

    display_area(circle)
    display_area(rectangle)
    display_area(triangle)
